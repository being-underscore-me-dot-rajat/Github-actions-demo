name: Test Python Backend

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  test-backend:
    runs-on: ubuntu-latest

    steps:
      # Step 1 — Checkout this repo
      - name: Checkout this repo
        uses: actions/checkout@v4

      # Step 2 — Clone your backend repo
      - name: Clone backend repository
        run: |
          git clone https://github.com/being-underscore-me-dot-rajat/Azure-Pipeline-Demo.git
          sleep 25

      # 📝 If your backend is private, use this instead:
      # - name: Clone backend repository
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   run: |
      #     git clone https://github.com/YOUR_USERNAME/YOUR_BACKEND_REPO.git backend
      #     cd backend

      # Step 3 — Set up Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      # Step 4 — Install dependencies
      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      # Step 5 — Run backend in the background
      - name: Start backend
        run: |
          nohup python app.py > server.log 2>&1 &
          sleep 5  # give backend a few seconds to start

      # Step 6 — Test backend health
      - name: Test backend health
        run: |
          curl -f http://127.0.0.1:8000/health || (echo "❌ Backend not responding" && exit 1)
          echo "✅ Backend is healthy!"

      # Step 7 — Stop backend (optional)
      - name: Stop backend
        run: |
          pkill -f "python app.py" || true
