name: Test Python Backend

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  clone-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout current repo
        uses: actions/checkout@v4

      - name: Clone backend repository
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Cloning backend repo..."
          git clone https://github.com/being-underscore-me-dot-rajat/Azure-Pipeline-Demo.git backend
          echo "Contents of cloned backend:"
          ls -la backend

  test-backend:
    runs-on: ubuntu-latest
    needs: clone-backend  # ensures cloning happens first
    steps:
      - name: Checkout current repo
        uses: actions/checkout@v4

      - name: Clone backend again (or use artifact, later)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git clone https://github.com/being-underscore-me-dot-rajat/Azure-Pipeline-Demo.git backend
          ls -la backend

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        working-directory: ./backend
        run: pip install -r requirements.txt

      - name: Start backend
        working-directory: ./backend
        run: |
          nohup python app.py > server.log 2>&1 &
          sleep 5

      - name: Test backend health
        run: |
          curl -f http://127.0.0.1:5000 || (echo "❌ Backend not responding" && exit 1)
          echo "✅ Backend is healthy!"
